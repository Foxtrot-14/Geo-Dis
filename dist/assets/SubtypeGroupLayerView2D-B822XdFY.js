import{d as a,f as n,g as d,P as u,q as l}from"./index-xbq7LRAl.js";import{r as g}from"./FeatureLayerView2D-B0bkLWUT.js";import"./Container-D0FNaGQw.js";import"./parser-ainqPSIf.js";import"./highlightReasons-Do5kNyU0.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-Bd0PAkMI.js";import"./featureConversionUtils-RHoZdd80.js";import"./OptimizedFeature-DUj7o6ET.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureEffect-90lcX9b_.js";import"./jsonUtils-BVYcwSgO.js";import"./timeSupport-Cp4g-6MS.js";import"./FeatureSet-BG8inNND.js";import"./LayerView-bRd78Omm.js";import"./TechniqueInstance-DVE4PPnM.js";import"./UpdateTracking2D-DBfkqqG3.js";import"./BidiEngine-BwB1Df7c.js";import"./GeometryUtils-DUA2NHae.js";import"./enums-BRXbslMp.js";import"./utils-BNpX3Phj.js";import"./Rect-CUzevAry.js";import"./LabelMetric-v-96RQkf.js";import"./Program-BZPH6wBq.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-zmeSXTBk.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-s1_hMKHE.js";import"./vec42-Dmy7JOK8.js";import"./vec4f64-CCf6w8sj.js";import"./TileContainer-Hr-ejOVw.js";import"./WGLContainer-GcXmU5zA.js";import"./ProgramTemplate-2DVv_B0N.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-zSh2G-7V.js";import"./CircularArray-CujHzHWW.js";import"./tileUtils-B7X19rIS.js";import"./lengthUtils-hjdKSm_k.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-CftpN9RC.js";import"./labelingInfo-CrM7eJNZ.js";import"./labelUtils-B38b05cC.js";import"./jsonUtils-DBhfkAEZ.js";import"./heatmapUtils-DZTqcKJl.js";import"./SDFHelper-DLiS0Z6D.js";import"./floatRGBA-DqPt1VBm.js";import"./FeatureCommandQueue-l4BkE3X8.js";import"./constants-D5zmR9t2.js";import"./HighlightCounter-BlO6g0hj.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-C2PJVGVx.js";import"./RefreshableLayerView-CQDe0flp.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const $i=i;export{$i as default};
