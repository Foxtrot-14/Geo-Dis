import{g as l,P as h,V as g,k as f,d as w,f as d}from"./index-xbq7LRAl.js";import{t as u,p as n}from"./jsonUtils-Dfb6dbOO.js";import{d as V}from"./FeatureSet-BG8inNND.js";import{f as b,y as S}from"./LayerView-bRd78Omm.js";import{t as _}from"./GraphicContainer-C_dwJ4Pu.js";import{V as T}from"./GraphicsView2D-DTjG6njp.js";import"./UniqueValueRenderer-B1dYbKHt.js";import"./ColorStop-DTtvB9mb.js";import"./diffUtils-CMku0PTa.js";import"./colorRamps-yeFZLCSh.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-C5B-ujWE.js";import"./lengthUtils-hjdKSm_k.js";import"./jsonUtils-DBhfkAEZ.js";import"./defaults-zmeSXTBk.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-BYYUClws.js";import"./LRUCache-QDI8wliO.js";import"./FieldsIndex-CGICfJ2k.js";import"./UnknownTimeZone-yUshbYci.js";import"./OverrideHelper-CGylMZJ6.js";import"./colorUtils-CAOQ4nvo.js";import"./vec42-Dmy7JOK8.js";import"./vec4f64-CCf6w8sj.js";import"./utils-BNpX3Phj.js";import"./quantizationUtils-Dj-w3gih.js";import"./heatmapUtils-DZTqcKJl.js";import"./Container-D0FNaGQw.js";import"./parser-ainqPSIf.js";import"./highlightReasons-Do5kNyU0.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-Bd0PAkMI.js";import"./AGraphicContainer-C7CHR9YE.js";import"./TechniqueInstance-DVE4PPnM.js";import"./UpdateTracking2D-DBfkqqG3.js";import"./BidiEngine-BwB1Df7c.js";import"./OptimizedFeature-DUj7o6ET.js";import"./GeometryUtils-DUA2NHae.js";import"./enums-BRXbslMp.js";import"./Rect-CUzevAry.js";import"./LabelMetric-v-96RQkf.js";import"./Program-BZPH6wBq.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BindType-BmZEZMMh.js";import"./Util-s1_hMKHE.js";import"./TileContainer-Hr-ejOVw.js";import"./WGLContainer-GcXmU5zA.js";import"./ProgramTemplate-2DVv_B0N.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-zSh2G-7V.js";import"./featureConversionUtils-RHoZdd80.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-l4BkE3X8.js";import"./constants-D5zmR9t2.js";import"./AttributeStore-Cnk_rnWA.js";import"./labelUtils-B38b05cC.js";import"./TimeOnly-zm5PW-Xy.js";import"./timeSupport-Yu3mOoiw.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-0ovdakRO.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,e){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const i=this._popupTemplates.get(r),s=r.hitTest(t);for(const p of s)p.layer=o,p.sourceLayer=o,p.popupTemplate=i;return s}).map(r=>({type:"graphic",graphic:r,layer:o,mapPoint:t}))}update(t){if(this.graphicsViews)for(const e of this.graphicsViews)e.processUpdate(t)}attach(){this.addAttachHandles([l(()=>{var t;return(t=this.layer)==null?void 0:t.featureCollections},t=>{this._clear();for(const{popupInfo:e,featureSet:o,layerDefinition:r}of t){const i=V.fromJSON(o),s=new g(i.features),p=r.drawingInfo,c=e?f.fromJSON(e):null,m=u(p.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:m,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=m.symbol):this.layer.lineSymbol=m.symbol:this.layer.polygonSymbol=m.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>{var t;return(t=this.layer)==null?void 0:t.polygonSymbol},t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>{var t;return(t=this.layer)==null?void 0:t.lineSymbol},t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>{var t;return(t=this.layer)==null?void 0:t.pointSymbol},t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Dt=y;export{Dt as default};
