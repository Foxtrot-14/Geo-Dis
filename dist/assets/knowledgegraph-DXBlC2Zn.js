const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/knowledgeGraphService-TAm1Mw-w.js","assets/index-xbq7LRAl.js","assets/index-DIsDuqIA.css","assets/GraphQueryStreaming-CwK8E37n.js"])))=>i.map(i=>d[i]);
import{b7 as x,_ as G,b3 as V,bB as C,bC as J,bx as K,aV as I,dk as M,dl as Q,b0 as j,ek as P,bv as L,em as O}from"./index-xbq7LRAl.js";import{a as T,b as u,r as c,I as U,m as W,G as y,ab as B,P as H,N as k,U as b,A as X,E as A,X as D,w as z,v as Y,ac as Z,ad as q,ae as $}from"./arcadeUtils-Cpet9i3n.js";import{l as tt}from"./portalUtils-BSrVIn0t.js";import{s as nt,m as et,t as at,p as rt,c as it}from"./GraphQueryStreaming-CwK8E37n.js";import"./TimeOnly-zm5PW-Xy.js";import"./UnknownTimeZone-yUshbYci.js";import"./ImmutableArray-BPVd6ESQ.js";import"./number-Jca1HS0O.js";import"./featureConversionUtils-RHoZdd80.js";import"./OptimizedFeature-DUj7o6ET.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FieldsIndex-CGICfJ2k.js";let f=null;async function ot(t){const n=V.geometryServiceUrl??"";if(!n){C()||await J();for(const e of t)e.container[e.indexer]=K(e.container[e.indexer],I.WGS84);return}const a=t.map(e=>e.container[e.indexer]),i=new M({geometries:a,outSpatialReference:I.WGS84}),s=await Q(n,i);for(let e=0;e<s.length;e++){const r=t[e];r.container[r.indexer]=s[e]}}async function E(t,n){const a=new j({portal:t,id:n});return await a.load(),f===null&&(f=await G(()=>import("./knowledgeGraphService-TAm1Mw-w.js").then(i=>i.k),__vite__mapDeps([0,1,2,3]))),await f.fetchKnowledgeGraph(a.url)}function R(t,n,a,i,s){if(t===null)return null;if(y(t)||A(t))return t;if(D(t)||D(t))return t.toJSDate();if(z(t))return t.toStorageFormat();if(Y(t))return t.toStorageString();if(Z(t)){const e={};for(const r of t.keys())e[r]=R(t.field(r),n,a,i,s),e[r]instanceof P&&s.push({container:e,indexer:r});return e}if(b(t)){const e=t.map(r=>R(r,n,a,i,s));for(let r=0;r<e.length;r++)e[r]instanceof P&&s.push({container:e,indexer:r});return e}return q(t)?t.spatialReference.isWGS84?t:t.spatialReference.isWebMercator&&n?L(t):t:void 0}function st(t,n){if(!t)return t;if(t.spatialReference.isWGS84&&n.spatialReference.isWebMercator)return O(t);if(t.spatialReference.equals(n.spatialReference))return t;throw new u(n,c.WrongSpatialReference,null)}function S(t,n){if(!t)return null;const a={};for(const i in t)a[i]=g(t[i],n);return a}function g(t,n){return t===null?null:b(t)?t.map(a=>g(a,n)):t instanceof et?{graphTypeName:t.typeName,id:t.id,graphType:"entity",properties:S(t.properties,n)}:t instanceof at?{graphType:"object",properties:S(t.properties,n)}:t instanceof rt?{graphTypeName:t.typeName,id:t.id,graphType:"relationship",originId:t.originId??null,destinationId:t.destinationId??null,properties:S(t.properties,n)}:t instanceof it?{graphType:"path",path:t.path?t.path.map(a=>g(a,n)):null}:q(t)?st(t,n):y(t)||A(t)||$(t)?t:null}function St(t){t.mode==="async"&&(t.functions.knowledgegraphbyportalitem=function(n,a){return t.standardFunctionAsync(n,a,(i,s,e)=>{var m,d;if(T(e,2,2,n,a),e[0]===null)throw new u(n,c.PortalRequired,a);if(e[0]instanceof U){const p=W(e[1]);let h;return h=(m=n.services)!=null&&m.portal?n.services.portal:x.getDefault(),E(tt(e[0],h),p)}if(y(e[0])===!1)throw new u(n,c.InvalidParameter,a);const r=W(e[0]);return E(((d=n.services)==null?void 0:d.portal)??x.getDefault(),r)})},t.signatures.push({name:"knowledgegraphbyportalitem",min:2,max:2}),t.functions.querygraph=function(n,a){return t.standardFunctionAsync(n,a,async(i,s,e)=>{var _;T(e,2,4,n,a);const r=e[0];if(!B(r))throw new u(n,c.InvalidParameter,a);const m=e[1];if(!y(m))throw new u(n,c.InvalidParameter,a);f===null&&(f=await G(()=>import("./knowledgeGraphService-TAm1Mw-w.js").then(o=>o.k),__vite__mapDeps([0,1,2,3])));let d=null;const p=H(e[2],null);if(!(p instanceof k||p===null))throw new u(n,c.InvalidParameter,a);if(p){let o=[];d=R(p,!0,!1,n,o),o=o.filter(l=>!l.container[l.indexer].spatialReference.isWGS84),o.length>0&&await ot(o)}const h=new nt({openCypherQuery:m,bindParameters:d});(((_=r==null?void 0:r.serviceDefinition)==null?void 0:_.currentVersion)??11.3)>11.2&&(h.outputSpatialReference=n.spatialReference);const F=(await f.executeQueryStreaming(r,h)).resultRowsStream.getReader(),v=[];try{for(;;){const{done:o,value:l}=await F.read();if(o)break;if(b(l))for(const w of l)v.push(g(w,n));else{const w=[];for(const N of l)w.push(g(l[N],n));v.push(w)}}}catch(o){throw o}return k.convertJsonToArcade(v,X(n),!1,!0)})},t.signatures.push({name:"querygraph",min:2,max:4}))}export{St as registerFunctions};
