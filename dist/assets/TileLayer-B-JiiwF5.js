import{b2 as _,aV as v,cb as S,U as m,eh as T,e7 as b,J as h,aZ as w,bh as O,dj as $,d1 as R,d as s,y as a,aR as U,aT as W,eg as j,f as P,bY as L}from"./index-xbq7LRAl.js";import{S as A}from"./MultiOriginJSONSupport-DMWx2RMo.js";import{i as B}from"./APIKeyMixin-D-Lmgt3B.js";import{p as I}from"./ArcGISCachedService-CVFjOXRD.js";import{m as M,f as N,t as C}from"./SublayersOwner-C0GwT43a.js";import{l as k}from"./ArcGISService-C0KYbM-y.js";import{l as D}from"./BlendLayer-DTkPSfTD.js";import{e as J}from"./CustomParametersMixin-ZokGHDkE.js";import{b as q}from"./OperationalLayer-D2QmD8nc.js";import{j as G}from"./PortalLayer-DnK0C8vG.js";import{f as V}from"./RefreshableLayer-Dqh0dXqi.js";import{t as E}from"./ScaleRangeLayer-DDWRZCy0.js";import{p as x}from"./commonProperties-DaxkwXA6.js";import{o as y}from"./imageBitmapUtils-DWMxY70m.js";import"./TileInfoTilemapCache-Dnks9VY0.js";import"./TilemapCache-BdZjCod3.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./LRUCache-QDI8wliO.js";import"./jsonUtils-Dfb6dbOO.js";import"./UniqueValueRenderer-B1dYbKHt.js";import"./ColorStop-DTtvB9mb.js";import"./diffUtils-CMku0PTa.js";import"./colorRamps-yeFZLCSh.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-C5B-ujWE.js";import"./lengthUtils-hjdKSm_k.js";import"./jsonUtils-DBhfkAEZ.js";import"./defaults-zmeSXTBk.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-BYYUClws.js";import"./FieldsIndex-CGICfJ2k.js";import"./UnknownTimeZone-yUshbYci.js";import"./OverrideHelper-CGylMZJ6.js";import"./colorUtils-CAOQ4nvo.js";import"./vec42-Dmy7JOK8.js";import"./vec4f64-CCf6w8sj.js";import"./utils-BNpX3Phj.js";import"./quantizationUtils-Dj-w3gih.js";import"./heatmapUtils-DZTqcKJl.js";import"./portalItemUtils-DWL7cg2a.js";import"./QueryTask-CKmoNM66.js";import"./infoFor3D-DsOdlPuA.js";import"./executeForIds-oOdC6pnj.js";import"./query-oKXKVoyl.js";import"./pbfQueryUtils-Bl19FUAz.js";import"./pbf-4Ghyjea7.js";import"./OptimizedFeature-DUj7o6ET.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-tTxKuowc.js";import"./executeQueryJSON-CIDhsKPo.js";import"./FeatureSet-BG8inNND.js";import"./executeQueryPBF-VjVp9e_m.js";import"./featureConversionUtils-RHoZdd80.js";import"./featureLayerUtils-Y_4TaWup.js";import"./RelationshipQuery-BUAHFHn6.js";import"./FeatureType-CYMvPZFh.js";import"./FeatureTemplate-B8CIsiQu.js";import"./labelingInfo-CrM7eJNZ.js";import"./labelUtils-B38b05cC.js";import"./LayerFloorInfo-1hbXg1Wq.js";import"./Relationship-Dl01M8wf.js";import"./serviceCapabilitiesUtils-DzQGlfpX.js";import"./popupUtils-B7aJOFoe.js";import"./sublayerUtils-BIuOcoAj.js";import"./jsonUtils-BVYcwSgO.js";import"./parser-ainqPSIf.js";import"./ElevationInfo-Cwa0hSJ4.js";var d;const f=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let i=d=class extends D(E(M(I(N(q(G(k(A(V(B(J(L)))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(_).then(()=>this._fetchService(r))),Promise.resolve(this)}get attributionDataUrl(){var r;const e=(r=this.parsedUrl)==null?void 0:r.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){var t;return(e=e||((t=r.tileInfo)==null?void 0:t.spatialReference))&&v.fromJSON(e)}writeSublayers(e,r,t,o){if(!this.loaded||!e)return;const p=e.slice().reverse().flatten(({sublayers:l})=>l&&l.toArray().reverse()).toArray(),n=[],c={writeSublayerStructure:!1,...o};p.forEach(l=>{const u=l.write({},c);n.push(u)}),n.some(l=>Object.keys(l).length>1)&&(r.layers=n)}get tileServers(){var e;return this._getDefaultTileServers((e=this.parsedUrl)==null?void 0:e.path)}castTileServers(e){return Array.isArray(e)?e.map(r=>S(r).path):null}fetchTile(e,r,t,o={}){const{signal:p}=o,n=this.getTileUrl(e,r,t),c={responseType:"image",signal:p,query:{...this.refreshParameters}};return m(n,c).then(l=>l.data)}async fetchImageBitmapTile(e,r,t,o={}){const{signal:p}=o;if(this.fetchTile!==d.prototype.fetchTile){const u=await this.fetchTile(e,r,t,o);return y(u,e,r,t,p)}const n=this.getTileUrl(e,r,t),c={responseType:"blob",signal:p,query:{...this.refreshParameters}},{data:l}=await m(n,c);return y(l,e,r,t,p)}getTileUrl(e,r,t){var c,l;const o=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,p=T({...(c=this.parsedUrl)==null?void 0:c.query,blankTile:!o&&null,...this.customParameters,token:this.apiKey}),n=this.tileServers;return`${n&&n.length?n[r%n.length]:(l=this.parsedUrl)==null?void 0:l.path}/tile/${e}/${r}/${t}${p?"?"+p:""}`}loadAll(){return b(this,e=>{e(this.allSublayers)})}_fetchService(e){return new Promise((r,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new h("tile-layer:undefined-url","layer's url is not defined");const o=w(this.parsedUrl.path);if(o!=null&&o.serverType==="ImageServer")throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");m(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)}).then(r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!O(t))return this._fetchServerVersion(t,e).then(o=>{this.read({currentVersion:o})}).catch(()=>{})})}_fetchServerVersion(e,r){if(!$(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return m(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(o=>{if(o.data&&o.data.currentVersion)return o.data.currentVersion;throw new h("tile-layer:version-not-available")})}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(e==null)return null;let r;e=e.toLowerCase();for(let t=0,o=f.length;t<o;t++)if(r=f[t],r.toLowerCase().includes(e))return R("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(e==null)return[];const r=e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[g]}};s([a({readOnly:!0})],i.prototype,"attributionDataUrl",null),s([a({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),s([a({json:{read:!0,write:!0}})],i.prototype,"blendMode",void 0),s([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),s([a({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),s([a({type:Boolean})],i.prototype,"resampling",void 0),s([a()],i.prototype,"sourceJSON",void 0),s([a({type:v})],i.prototype,"spatialReference",void 0),s([U("spatialReference",["spatialReference","tileInfo"])],i.prototype,"readSpatialReference",null),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),s([a({readOnly:!0})],i.prototype,"sublayers",void 0),s([W("sublayers",{layers:{type:[C]}})],i.prototype,"writeSublayers",null),s([a({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),s([a()],i.prototype,"tileServers",null),s([j("tileServers")],i.prototype,"castTileServers",null),s([a({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),s([a(x)],i.prototype,"url",void 0),i=d=s([P("esri.layers.TileLayer")],i);const g=Symbol("default-fetch-tile");i.prototype.fetchTile[g]=!0;const sr=i;export{sr as default};
